# Generated by Django 4.2.14 on 2024-09-05 11:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('partners', '0001_initial'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('notes', models.TextField(blank=True, default=None, help_text='Notas del registro.', null=True, verbose_name='notas')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación del registro.', verbose_name='fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de ultima actualización del registro.', verbose_name='fecha de actualización')),
                ('is_active', models.BooleanField(default=True, help_text='Estado del registro.', verbose_name='activo')),
                ('id_user_created', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario creador del registro 0 es anonimo.', null=True, verbose_name='usuario creador')),
                ('id_user_updated', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario actualizador del registro.', null=True, verbose_name='usuario actualizador')),
                ('id_invoice', models.AutoField(primary_key=True, serialize=False)),
                ('num_invoice', models.CharField(help_text='Numero de Factura C para el cliente S para el proveedor', max_length=50, verbose_name='Numero de Factura')),
                ('type_document', models.CharField(choices=[('client_invoice', 'Factura de Cliente'), ('supplier_invoice', 'Factura de Proveedor')], max_length=50, verbose_name='Tipo de Documento')),
                ('type_invoice', models.CharField(choices=[('export', 'Exportación'), ('local', 'Nacional')], max_length=50, verbose_name='Tipo de Factura')),
                ('date', models.DateTimeField(auto_now=True, verbose_name='Fecha')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Fecha de vencimiento')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio total')),
                ('qb_total', models.PositiveSmallIntegerField(verbose_name='Total QB')),
                ('hb_total', models.PositiveSmallIntegerField(verbose_name='Total HB')),
                ('awb', models.CharField(blank=True, max_length=50, null=True, verbose_name='MAWB')),
                ('dae_export', models.CharField(blank=True, max_length=50, null=True, verbose_name='DAE Exportación')),
                ('hawb', models.CharField(blank=True, max_length=50, null=True, verbose_name='HAWB')),
                ('cargo_agency', models.CharField(blank=True, max_length=50, null=True, verbose_name='Agencia de Carga')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='Fecha de entrega')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Peso KG')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('paid', 'Pagado'), ('void', 'Anulado')], default='pending', max_length=50, verbose_name='Estado')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.partner')),
            ],
            options={
                'ordering': ['-created_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('notes', models.TextField(blank=True, default=None, help_text='Notas del registro.', null=True, verbose_name='notas')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación del registro.', verbose_name='fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de ultima actualización del registro.', verbose_name='fecha de actualización')),
                ('is_active', models.BooleanField(default=True, help_text='Estado del registro.', verbose_name='activo')),
                ('id_user_created', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario creador del registro 0 es anonimo.', null=True, verbose_name='usuario creador')),
                ('id_user_updated', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario actualizador del registro.', null=True, verbose_name='usuario actualizador')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now=True, verbose_name='Fecha')),
                ('type_document', models.CharField(choices=[('client_order', 'Orden de Cliente'), ('supplier_order', 'Orden de Proveedor')], max_length=50, verbose_name='Tipo de Documento')),
                ('num_order', models.CharField(blank=True, help_text='Numero de Orden C para el cliente S para el proveedor autonumerico manual', max_length=50, null=True, verbose_name='PO Socio')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='Fecha de entrega')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('delivered', 'Entregado'), ('cancelled', 'Cancelado'), ('invoiced', 'Facturado')], max_length=50)),
                ('discount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Descuento')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio total')),
                ('qb_total', models.PositiveSmallIntegerField(verbose_name='Total QB')),
                ('hb_total', models.PositiveSmallIntegerField(verbose_name='Total QB')),
                ('partner', models.ForeignKey(help_text='C customer S supplier', on_delete=django.db.models.deletion.CASCADE, to='partners.partner')),
                ('purchase_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trade.order')),
            ],
            options={
                'ordering': ['-created_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('notes', models.TextField(blank=True, default=None, help_text='Notas del registro.', null=True, verbose_name='notas')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación del registro.', verbose_name='fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de ultima actualización del registro.', verbose_name='fecha de actualización')),
                ('is_active', models.BooleanField(default=True, help_text='Estado del registro.', verbose_name='activo')),
                ('id_user_created', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario creador del registro 0 es anonimo.', null=True, verbose_name='usuario creador')),
                ('id_user_updated', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario actualizador del registro.', null=True, verbose_name='usuario actualizador')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(verbose_name='Fecha de pago')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Monto')),
                ('method', models.CharField(max_length=50, verbose_name='Metodo de pago')),
                ('bank', models.CharField(blank=True, max_length=50, null=True, verbose_name='Banco')),
                ('nro_account', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nro de Cuenta')),
                ('nro_operation', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nro de Operación')),
                ('evidence', models.FileField(blank=True, null=True, upload_to='payments', verbose_name='Comprobante')),
                ('invoices', models.ManyToManyField(to='trade.invoice')),
            ],
            options={
                'ordering': ['-created_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('notes', models.TextField(blank=True, default=None, help_text='Notas del registro.', null=True, verbose_name='notas')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación del registro.', verbose_name='fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de ultima actualización del registro.', verbose_name='fecha de actualización')),
                ('is_active', models.BooleanField(default=True, help_text='Estado del registro.', verbose_name='activo')),
                ('id_user_created', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario creador del registro 0 es anonimo.', null=True, verbose_name='usuario creador')),
                ('id_user_updated', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario actualizador del registro.', null=True, verbose_name='usuario actualizador')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(default=0, verbose_name='Cantidad')),
                ('line_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio')),
                ('stem_flower', models.IntegerField(default=0, help_text='Cantidad de tallos de flor', verbose_name='Tallo Flor')),
                ('box', models.CharField(choices=[('hb', 'HB'), ('qb', 'QB'), ('fb', 'FB')], max_length=50, verbose_name='Tipo de caja')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trade.order')),
                ('stock_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.stockdetail')),
            ],
            options={
                'ordering': ['-created_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, default=None, help_text='Notas del registro.', null=True, verbose_name='notas')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación del registro.', verbose_name='fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de ultima actualización del registro.', verbose_name='fecha de actualización')),
                ('is_active', models.BooleanField(default=True, help_text='Estado del registro.', verbose_name='activo')),
                ('id_user_created', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario creador del registro 0 es anonimo.', null=True, verbose_name='usuario creador')),
                ('id_user_updated', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario actualizador del registro.', null=True, verbose_name='usuario actualizador')),
                ('quantity', models.IntegerField(default=0, verbose_name='Cantidad Tallos')),
                ('line_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio')),
                ('line_discount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Descuento')),
                ('stem_flower', models.IntegerField(default=0, help_text='Cantidad de tallos de flor', verbose_name='Tallo Flor')),
                ('box', models.CharField(choices=[('hb', 'HB'), ('qb', 'QB'), ('fb', 'FB')], max_length=50, verbose_name='Tipo de caja')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trade.invoice')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trade.orderitems')),
            ],
            options={
                'ordering': ['-created_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='purcharse_order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trade.order'),
        ),
        migrations.CreateModel(
            name='HistoricalPayment',
            fields=[
                ('notes', models.TextField(blank=True, default=None, help_text='Notas del registro.', null=True, verbose_name='notas')),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='Fecha de creación del registro.', verbose_name='fecha de creación')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Fecha de ultima actualización del registro.', verbose_name='fecha de actualización')),
                ('is_active', models.BooleanField(default=True, help_text='Estado del registro.', verbose_name='activo')),
                ('id_user_created', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario creador del registro 0 es anonimo.', null=True, verbose_name='usuario creador')),
                ('id_user_updated', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario actualizador del registro.', null=True, verbose_name='usuario actualizador')),
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('date', models.DateField(verbose_name='Fecha de pago')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Monto')),
                ('method', models.CharField(max_length=50, verbose_name='Metodo de pago')),
                ('bank', models.CharField(blank=True, max_length=50, null=True, verbose_name='Banco')),
                ('nro_account', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nro de Cuenta')),
                ('nro_operation', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nro de Operación')),
                ('evidence', models.TextField(blank=True, max_length=100, null=True, verbose_name='Comprobante')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical payment',
                'verbose_name_plural': 'historical payments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOrderItems',
            fields=[
                ('notes', models.TextField(blank=True, default=None, help_text='Notas del registro.', null=True, verbose_name='notas')),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='Fecha de creación del registro.', verbose_name='fecha de creación')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Fecha de ultima actualización del registro.', verbose_name='fecha de actualización')),
                ('is_active', models.BooleanField(default=True, help_text='Estado del registro.', verbose_name='activo')),
                ('id_user_created', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario creador del registro 0 es anonimo.', null=True, verbose_name='usuario creador')),
                ('id_user_updated', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario actualizador del registro.', null=True, verbose_name='usuario actualizador')),
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('quantity', models.IntegerField(default=0, verbose_name='Cantidad')),
                ('line_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio')),
                ('stem_flower', models.IntegerField(default=0, help_text='Cantidad de tallos de flor', verbose_name='Tallo Flor')),
                ('box', models.CharField(choices=[('hb', 'HB'), ('qb', 'QB'), ('fb', 'FB')], max_length=50, verbose_name='Tipo de caja')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='trade.order')),
                ('stock_detail', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='products.stockdetail')),
            ],
            options={
                'verbose_name': 'historical order items',
                'verbose_name_plural': 'historical order itemss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOrder',
            fields=[
                ('notes', models.TextField(blank=True, default=None, help_text='Notas del registro.', null=True, verbose_name='notas')),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='Fecha de creación del registro.', verbose_name='fecha de creación')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Fecha de ultima actualización del registro.', verbose_name='fecha de actualización')),
                ('is_active', models.BooleanField(default=True, help_text='Estado del registro.', verbose_name='activo')),
                ('id_user_created', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario creador del registro 0 es anonimo.', null=True, verbose_name='usuario creador')),
                ('id_user_updated', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario actualizador del registro.', null=True, verbose_name='usuario actualizador')),
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('date', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha')),
                ('type_document', models.CharField(choices=[('client_order', 'Orden de Cliente'), ('supplier_order', 'Orden de Proveedor')], max_length=50, verbose_name='Tipo de Documento')),
                ('num_order', models.CharField(blank=True, help_text='Numero de Orden C para el cliente S para el proveedor autonumerico manual', max_length=50, null=True, verbose_name='PO Socio')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='Fecha de entrega')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('delivered', 'Entregado'), ('cancelled', 'Cancelado'), ('invoiced', 'Facturado')], max_length=50)),
                ('discount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Descuento')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio total')),
                ('qb_total', models.PositiveSmallIntegerField(verbose_name='Total QB')),
                ('hb_total', models.PositiveSmallIntegerField(verbose_name='Total QB')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('partner', models.ForeignKey(blank=True, db_constraint=False, help_text='C customer S supplier', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='partners.partner')),
                ('purchase_order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='trade.order')),
            ],
            options={
                'verbose_name': 'historical order',
                'verbose_name_plural': 'historical orders',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalInvoiceItems',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('notes', models.TextField(blank=True, default=None, help_text='Notas del registro.', null=True, verbose_name='notas')),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='Fecha de creación del registro.', verbose_name='fecha de creación')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Fecha de ultima actualización del registro.', verbose_name='fecha de actualización')),
                ('is_active', models.BooleanField(default=True, help_text='Estado del registro.', verbose_name='activo')),
                ('id_user_created', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario creador del registro 0 es anonimo.', null=True, verbose_name='usuario creador')),
                ('id_user_updated', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario actualizador del registro.', null=True, verbose_name='usuario actualizador')),
                ('quantity', models.IntegerField(default=0, verbose_name='Cantidad Tallos')),
                ('line_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio')),
                ('line_discount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Descuento')),
                ('stem_flower', models.IntegerField(default=0, help_text='Cantidad de tallos de flor', verbose_name='Tallo Flor')),
                ('box', models.CharField(choices=[('hb', 'HB'), ('qb', 'QB'), ('fb', 'FB')], max_length=50, verbose_name='Tipo de caja')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='trade.invoice')),
                ('order_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='trade.orderitems')),
            ],
            options={
                'verbose_name': 'historical invoice items',
                'verbose_name_plural': 'historical invoice itemss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalInvoice',
            fields=[
                ('notes', models.TextField(blank=True, default=None, help_text='Notas del registro.', null=True, verbose_name='notas')),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='Fecha de creación del registro.', verbose_name='fecha de creación')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Fecha de ultima actualización del registro.', verbose_name='fecha de actualización')),
                ('is_active', models.BooleanField(default=True, help_text='Estado del registro.', verbose_name='activo')),
                ('id_user_created', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario creador del registro 0 es anonimo.', null=True, verbose_name='usuario creador')),
                ('id_user_updated', models.PositiveIntegerField(blank=True, default=0, help_text='Identificador del usuario actualizador del registro.', null=True, verbose_name='usuario actualizador')),
                ('id_invoice', models.IntegerField(blank=True, db_index=True)),
                ('num_invoice', models.CharField(help_text='Numero de Factura C para el cliente S para el proveedor', max_length=50, verbose_name='Numero de Factura')),
                ('type_document', models.CharField(choices=[('client_invoice', 'Factura de Cliente'), ('supplier_invoice', 'Factura de Proveedor')], max_length=50, verbose_name='Tipo de Documento')),
                ('type_invoice', models.CharField(choices=[('export', 'Exportación'), ('local', 'Nacional')], max_length=50, verbose_name='Tipo de Factura')),
                ('date', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Fecha de vencimiento')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio total')),
                ('qb_total', models.PositiveSmallIntegerField(verbose_name='Total QB')),
                ('hb_total', models.PositiveSmallIntegerField(verbose_name='Total HB')),
                ('awb', models.CharField(blank=True, max_length=50, null=True, verbose_name='MAWB')),
                ('dae_export', models.CharField(blank=True, max_length=50, null=True, verbose_name='DAE Exportación')),
                ('hawb', models.CharField(blank=True, max_length=50, null=True, verbose_name='HAWB')),
                ('cargo_agency', models.CharField(blank=True, max_length=50, null=True, verbose_name='Agencia de Carga')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='Fecha de entrega')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Peso KG')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('paid', 'Pagado'), ('void', 'Anulado')], default='pending', max_length=50, verbose_name='Estado')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('partner', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='partners.partner')),
                ('purcharse_order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='trade.order')),
            ],
            options={
                'verbose_name': 'historical invoice',
                'verbose_name_plural': 'historical invoices',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='CreditNote',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('num_credit_note', models.CharField(max_length=50, verbose_name='Numero de nota de crédito')),
                ('date', models.DateField(verbose_name='Fecha de la nota de crédito')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Monto')),
                ('reason', models.TextField(verbose_name='Motivo de la nota de crédito')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trade.invoice')),
            ],
        ),
    ]
